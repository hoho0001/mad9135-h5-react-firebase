{"version":3,"sources":["components/FireStore.js","components/AppHeader.js","components/AppFooter.js","components/FormDetail.js","components/ListItem.js","components/ListView.js","components/NewItemView.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AppHeader","Jumbotron","className","to","Button","color","outline","block","AppFooter","NewItemView","props","handleInputChange","event","preventDefault","target","name","value","setState","handleFormSubmit","state","detail","status","alert","item","Form","FormGroup","Label","for","Input","type","id","placeholder","this","onChange","onClick","handleCancel","React","Component","ListItem","toggle","ev","handleEdit","handleDelete","window","confirm","Col","sm","FormDetail","Card","CardBody","CardTitle","CardText","ListView","Container","Row","items","map","key","handleAdd","history","push","categoriesRef","firestore","collection","App","buildList","data","list","isLoading","addItem","cuid","newList","concat","doc","set","editItem","index","findIndex","e","update","then","console","log","catch","error","deleteItem","targetItem","filter","delete","get","snapshot","courses","forEach","course","basename","path","render","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08e6f99c.chunk.js","sourcesContent":["import firebase from 'firebase';\nconst config = {\n  apiKey: \"AIzaSyAcLukBXrAhosxaWSK9aZqISo7x7QdjFaQ\",\n  authDomain: \"react-firebase-e47ce.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-e47ce.firebaseio.com\",\n  projectId: \"react-firebase-e47ce\",\n  storageBucket: \"react-firebase-e47ce.appspot.com\",\n  messagingSenderId: \"636956368237\",\n  appId: \"1:636956368237:web:e2ffc1fe44016324d2ce64\"\n};\nfirebase.initializeApp(config);\nexport default firebase;","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Jumbotron, Button } from 'reactstrap';\n\nconst AppHeader = () => {\n  return (\n    <Jumbotron>\n      <h1 className=\"display-3\">React CRUD List with Firebase</h1>\n      <p className=\"lead\">\n      <NavLink to='/item' className=\"App-link\"><Button  color=\"primary\" outline block={false}>Add Item</Button></NavLink>\n      </p>\n    </Jumbotron>\n  )\n}\n\nexport default AppHeader\n\n\n","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\n\nconst AppFooter = () => {\n  return (\n    <footer className=\"pt-5\">\n      <hr />\n      <div className=\"container-fluid text-center padding\">\n        <p>@ 2019 LIEN HO HOANG</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter\n\n\n","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\nimport { Form, Button, FormGroup, Label, Input } from 'reactstrap';\n\nclass NewItemView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: props.item.name,\n      detail: props.item.detail\n    }\n  }\n\n  handleInputChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (!this.state.name || !this.state.detail) {\n      alert(\"Please enter information, Name and Detail are required!\")\n      return\n    }\n    this.props.handleFormSubmit({\n      name: this.state.name,\n      detail: this.state.detail,\n      status: 'read'\n    })\n\n    this.setState({ name: '', detail: '' })\n\n  };\n\n  render() {\n    return (\n\n      <Form className='form'>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"itemName\" className=\"mr-sm-2\">Name</Label>\n          <Input type=\"text\" name=\"name\" id=\"itemName\" placeholder=\"Item name\" value={this.state.name} onChange={this.handleInputChange} />\n        </FormGroup>\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n          <Label for=\"itemDetail\" className=\"mr-sm-2\">Detail</Label>\n          <Input type=\"textarea\" name=\"detail\" id=\"itemDetail\" placeholder=\"Item detail\" value={this.state.detail} onChange={this.handleInputChange} />\n        </FormGroup>\n        <Button outline color=\"success\" onClick={this.handleFormSubmit}>Save</Button>\n        <Button outline onClick={this.props.handleCancel}>Cancel</Button>\n      </Form>\n    )\n  }\n\n}\n\nexport default NewItemView\n","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\nimport { Col, Card, CardText, CardBody, CardTitle, Button } from 'reactstrap';\nimport FormDetail from './FormDetail'\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.item.id,\n      name: props.item.name,\n      detail: props.item.detail,\n      status: props.item.status\n    }\n  }\n\n  toggle = (ev) => {\n    let item = { ...this.state }\n    item.status = (item.status === 'edit') ? 'read' : 'edit'\n    this.setState({ ...item })\n  }\n\n  handleFormSubmit = event => {\n    let item = {\n      id: this.state.id,\n      name: event.name,\n      detail: event.detail,\n      status: 'read'\n    }\n    this.setState(item)\n    this.props.handleEdit(item)\n\n  };\n\n  handleCancel = event => {\n    this.setState({\n      status: 'read', \n      name: this.props.item.name,\n      detail: this.props.item.detail,\n    })\n  }\n  handleDelete = event => {\n    if (window.confirm(\"Do you want to remove the item?\")) {\n      this.props.handleDelete(this.props.item)\n    }\n  }\n\n  render() {\n    return (\n      (this.state.status === 'edit') ?\n      <Col sm='6'>\n          <FormDetail item={this.state} handleCancel={this.handleCancel} handleFormSubmit={this.handleFormSubmit} />\n        </Col>\n        :\n        <Col sm='6'>\n          <Card>\n            <CardBody>\n              <CardTitle>{this.props.item.name}</CardTitle>\n              <CardText>{this.props.item.detail}</CardText>\n              <div><Button outline color=\"success\" onClick={this.toggle}>Edit</Button>\n                <Button outline color=\"danger\" onClick={this.handleDelete}>Delete</Button>\n\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        \n    )\n  }\n}\n\nexport default ListItem\n","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\nimport ListItem from './ListItem'\nimport { Container, Row } from 'reactstrap';\n\n\nfunction ListView(props) {\n  return (\n    <Container className=\"container\">\n      <Row>\n        {props.items && props.items.map((item) => (\n          <ListItem key={item.id} item={item} handleEdit={props.handleEdit} handleDelete={props.handleDelete} />\n        ))\n        }\n      </Row>\n    </Container>\n  )\n}\n\nexport default ListView\n\n\n","// Lien Ho Hoang - 2019/11/02\n\nimport React from 'react'\nimport { Container, Row, Col } from 'reactstrap';\nimport FormDetail from './FormDetail'\n\nclass NewItemView extends React.Component {\n\n  handleFormSubmit = item => {\n    this.props.handleAdd(item)\n    this.props.history.push('/')\n  };\n\n  handleCancel = event => {\n    this.props.history.push('/')\n  }\n\n  render() {\n    return (\n      <Container className=\"container\">\n        <Row className=\"title\">Add Item</Row>\n        <Row>\n          <Col>\n            <FormDetail item={{name:'',detail:''}} handleCancel={this.handleCancel} handleFormSubmit={this.handleFormSubmit} />\n          </Col>\n\n        </Row>\n      </Container>\n\n    )\n  }\n\n}\n\nexport default NewItemView\n","// Lien Ho Hoang - 2019/11/30\n\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport firebase from \"./components/FireStore\";\nimport cuid from 'cuid';\n\nimport AppHeader from './components/AppHeader'\nimport AppFooter from './components/AppFooter'\nimport ListView from './components/ListView'\nimport NewItemView from './components/NewItemView';\nimport './App.css'\n\nvar db = firebase.firestore();\nvar categoriesRef = db.collection(\"courses\");\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      isLoading: true\n    }\n  }\n\n  componentDidMount() {\n\n    categoriesRef.get().then(snapshot => {\n      if (snapshot) {\n        let courses = []\n        snapshot.forEach(course => {\n          courses.push({ id: course.id, ...course.data() })\n        })\n        this.buildList(courses)\n\n      }\n    }).catch(error => {\n      // Handle the error\n      console.log(\"Error getting documents: \", error);\n    })\n\n  }\n\n  buildList = (data) => {\n    this.setState({\n      list: data,\n      isLoading: false\n    })\n  }\n\n  addItem = (item) => {\n    item.id = cuid()\n    let newList = this.state.list.concat(item) // OR list.push(item)  add new value to the ending of the existing array\n    // this.setState({ list: [item, ...this.state.list] }) // add new value to the beginning of the existing array\n\n    categoriesRef\n      .doc(item.id).set({\n        name: item.name,\n        detail: item.detail\n      });\n\n    this.buildList(newList)\n  }\n\n  editItem = (item) => {\n    if (item) {\n      let newList = this.state.list\n      const index = newList.findIndex((e) => e.id === item.id)\n      if (index !== -1) {\n        newList[index] = item\n        categoriesRef\n          .doc(item.id).update({\n            name: item.name,\n            detail: item.detail\n          })\n          .then(function () {\n            console.log(\"Successfully updated!\");\n          })\n          .catch(function (error) {\n            // The document probably doesn't exist.\n            console.error(\"Error updating: \", error);\n          });\n        this.buildList(newList)\n      }\n    }\n  }\n\n  deleteItem = (targetItem) => {\n    // remove item in this.state.list\n    let newList = this.state.list.filter(item => item.id !== targetItem.id)\n\n    categoriesRef\n      .doc(targetItem.id)\n      .delete()\n      .then(function () {\n        console.log(`Deleted`);\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    // Update State\n    this.buildList(newList)\n  }\n\n\n  render() {\n    return (\n      (this.state.isLoading) ? <div>Loading</div> :\n        <HashRouter basename='/'>\n          <div className=\"App\">\n            <AppHeader />\n            <Switch>\n              <Route path={`/item`} render={(props) => <NewItemView {...props} handleAdd={this.addItem} />} />\n              <Route exact path='/' render={(props) => <ListView {...props} items={this.state.list} handleDelete={this.deleteItem} handleEdit={this.editItem} />} />\n            </Switch>\n            <AppFooter />\n          </div>\n\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}